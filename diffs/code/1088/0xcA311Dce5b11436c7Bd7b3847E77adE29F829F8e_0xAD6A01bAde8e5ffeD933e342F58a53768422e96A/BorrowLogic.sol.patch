Index: lib/aave-v3-origin/src/contracts/protocol/libraries/logic/BorrowLogic.sol
===================================================================
--- lib/aave-v3-origin/src/contracts/protocol/libraries/logic/BorrowLogic.sol
+++ lib/aave-v3-origin/src/contracts/protocol/libraries/logic/BorrowLogic.sol
@@ -228,20 +228,23 @@
             reserveCache,
             paybackAmount
         );
 
+        // in case of aToken repayment the msg.sender must always repay on behalf of itself
         if (params.useATokens) {
             IAToken(reserveCache.aTokenAddress).burn(
                 msg.sender,
                 reserveCache.aTokenAddress,
                 paybackAmount,
                 reserveCache.nextLiquidityIndex
             );
-            // in case of aToken repayment the msg.sender must always repay on behalf of itself
+            bool isCollateral = userConfig.isUsingAsCollateral(reserve.id);
             if (
+                isCollateral &&
                 IAToken(reserveCache.aTokenAddress).scaledBalanceOf(
                     msg.sender
-                ) == 0
+                ) ==
+                0
             ) {
                 userConfig.setUsingAsCollateral(reserve.id, false);
                 emit ReserveUsedAsCollateralDisabled(params.asset, msg.sender);
             }
